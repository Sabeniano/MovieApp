// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieApp;

namespace MovieApp.Migrations
{
    [DbContext(typeof(MoviesDbContext))]
    [Migration("20181023102202_MoviesDBRelationsV2")]
    partial class MoviesDBRelationsV2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieApp.Entities.Actors", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("ActorId");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("MovieApp.Entities.Directors", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("DirectorId");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("MovieApp.Entities.Genres", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Genre");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MovieApp.Entities.MovieActors", b =>
                {
                    b.Property<int>("MoviesId");

                    b.Property<int>("ActorsId");

                    b.Property<int?>("MovieActorsActorsId");

                    b.Property<int?>("MovieActorsMoviesId");

                    b.HasKey("MoviesId", "ActorsId");

                    b.HasIndex("ActorsId");

                    b.HasIndex("MovieActorsMoviesId", "MovieActorsActorsId");

                    b.ToTable("MovieActor");
                });

            modelBuilder.Entity("MovieApp.Entities.MovieGenres", b =>
                {
                    b.Property<int>("MoviesId");

                    b.Property<int>("GenresId");

                    b.Property<int?>("MovieGenresGenresId");

                    b.Property<int?>("MovieGenresMoviesId");

                    b.HasKey("MoviesId", "GenresId");

                    b.HasIndex("GenresId");

                    b.HasIndex("MovieGenresMoviesId", "MovieGenresGenresId");

                    b.ToTable("MovieGenre");
                });

            modelBuilder.Entity("MovieApp.Entities.Movies", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActorId");

                    b.Property<string>("Description");

                    b.Property<int>("DirectorId");

                    b.Property<int>("GenreId");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<TimeSpan>("RunTime");

                    b.Property<string>("Title");

                    b.HasKey("MovieId");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieApp.Entities.MovieActors", b =>
                {
                    b.HasOne("MovieApp.Entities.Actors", "Actors")
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MovieApp.Entities.Movies", "Movies")
                        .WithMany("MovieActor")
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MovieApp.Entities.MovieActors")
                        .WithMany("MovieActor")
                        .HasForeignKey("MovieActorsMoviesId", "MovieActorsActorsId");
                });

            modelBuilder.Entity("MovieApp.Entities.MovieGenres", b =>
                {
                    b.HasOne("MovieApp.Entities.Genres", "Genres")
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MovieApp.Entities.Movies", "Movies")
                        .WithMany("MovieGenre")
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MovieApp.Entities.MovieGenres")
                        .WithMany("MovieGenre")
                        .HasForeignKey("MovieGenresMoviesId", "MovieGenresGenresId");
                });

            modelBuilder.Entity("MovieApp.Entities.Movies", b =>
                {
                    b.HasOne("MovieApp.Entities.Directors", "Directors")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
